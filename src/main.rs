use anyhow::Result;
use core::str;

use esp_idf_svc::{eventloop::EspSystemEventLoop, hal::prelude::Peripherals};

mod wifi;

#[toml_cfg::toml_config]
struct Config {
    #[default("guest")]
    wifi_ssid: &'static str,
    #[default("")]
    wifi_psk: &'static str,
}

fn main() -> Result<()> {
    // It is necessary to call this function once. Otherwise some patches to the runtime
    // implemented by esp-idf-sys might not link properly. See https://github.com/esp-rs/esp-idf-template/issues/71
    esp_idf_svc::sys::link_patches();

    // Bind the log crate to the ESP Logging facilities
    esp_idf_svc::log::EspLogger::initialize_default();

    let peripherals = Peripherals::take().unwrap();
    let sysloop = EspSystemEventLoop::take()?;

    // `CONFIG` constant is auto-generated by toml_config
    let kodi_config = CONFIG;

    let _wifi = wifi::wifi(
        kodi_config.wifi_ssid,
        kodi_config.wifi_psk,
        peripherals.modem,
        sysloop,
    )?;

    loop {
        log::info!("Hello, world!");
        std::thread::sleep(std::time::Duration::from_millis(300));
    }
}
